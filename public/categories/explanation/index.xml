<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Explanation on Answers at the End</title>
    <link>https://NicknEma.github.io/categories/explanation/</link>
    <description>Recent content in Explanation on Answers at the End</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Nov 2024 21:08:06 +0100</lastBuildDate>
    <atom:link href="https://NicknEma.github.io/categories/explanation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Odin Pills: Package Names</title>
      <link>https://NicknEma.github.io/posts/odin-pills--package-names/</link>
      <pubDate>Mon, 04 Nov 2024 21:08:06 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/odin-pills--package-names/</guid>
      <description>The Odin programming languages is built around the idea of packages: independent code units that contain related functionality.&#xA;As the documentation states, each Odin file must start with a package declaration, like this:&#xA;package strings // Package declaration /* ... */ The above file declares itself to be part of the strings package. If another package wants to use the functionality it provides, it must import it like this:&#xA;package program import &amp;#34;path_to_package/strings&amp;#34; // Import declaration main :: proc() { s := strings.</description>
    </item>
    <item>
      <title>There Are Three Types of Linking</title>
      <link>https://NicknEma.github.io/posts/there-are-three-types-of-linking/</link>
      <pubDate>Thu, 25 Apr 2024 12:00:00 +0200</pubDate>
      <guid>https://NicknEma.github.io/posts/there-are-three-types-of-linking/</guid>
      <description>I was taught that libraries can be linked one of two ways: statically or dynamically.&#xA;Computer people love these two words and use them every time they can. Static and dynamic typing, static and dynamic scoping rules.&#xA;In the case of linking, the nomenclature describes whether the resulting binary has depencencies that will still be unresolved when it will be loaded into memory for execution.&#xA;For a symbol to be resolved statically, the linker (typically link.</description>
    </item>
    <item>
      <title>The Infinity of Lines and Numbers</title>
      <link>https://NicknEma.github.io/posts/the-infinity-of-lines-and-numbers/</link>
      <pubDate>Sat, 06 Apr 2024 16:43:01 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/the-infinity-of-lines-and-numbers/</guid>
      <description>“Young man, in mathematics you don&amp;rsquo;t understand things. You just get used to them.”&#xA;– John von Neumann&#xA;This is a line:&#xA;I was introduced to this mathematical object when I was in elementary school. The teacher drew one on the blackboard, and then said &amp;ldquo;a line is composed of an infinite number of points. The dashes at the ends indicate that it continues on forever, in both directions&amp;rdquo;. At first, I was surprised by the mention of infinity.</description>
    </item>
  </channel>
</rss>
