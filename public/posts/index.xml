<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Answers at the End</title>
    <link>https://NicknEma.github.io/posts/</link>
    <description>Recent content in Posts on Answers at the End</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jan 2025 20:54:43 +0100</lastBuildDate>
    <atom:link href="https://NicknEma.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows programming part 1: displaying a message box</title>
      <link>https://NicknEma.github.io/posts/windows-programming-part-1--displaying-a-message-box/</link>
      <pubDate>Mon, 20 Jan 2025 20:54:43 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/windows-programming-part-1--displaying-a-message-box/</guid>
      <description>This article explains how to create a Windows program that displays a message box like the following. I call this the Minimal Windows Program™, or Hello Windows.&#xA;What the final program will look like.&#xA;Such a simple program is ideal because it touches many topics and is useful for creating a foundation of Windows-related knowledge.&#xA;The whole program is made out of a single function call. It&amp;rsquo;ll look something like this:</description>
    </item>
    <item>
      <title>Odin Pills: Package Names</title>
      <link>https://NicknEma.github.io/posts/odin-pills--package-names/</link>
      <pubDate>Mon, 04 Nov 2024 21:08:06 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/odin-pills--package-names/</guid>
      <description>The Odin programming languages is built around the idea of packages: independent code units that contain related functionality.&#xA;As the documentation states, each Odin file must start with a package declaration, like this:&#xA;package strings // Package declaration /* ... */ The above file declares itself to be part of the strings package. If another package wants to use the functionality it provides, it must import it like this:&#xA;package program import &amp;#34;path_to_package/strings&amp;#34; // Import declaration main :: proc() { s := strings.</description>
    </item>
    <item>
      <title>Host a Website on GitHub Pages</title>
      <link>https://NicknEma.github.io/posts/host-a-website-on-github-pages/</link>
      <pubDate>Sun, 16 Jun 2024 16:53:13 +0200</pubDate>
      <guid>https://NicknEma.github.io/posts/host-a-website-on-github-pages/</guid>
      <description>This post expects you to already be able to create a GitHub repository and push changes onto it.&#xA;Any GitHub repository can be hosted with GitHub Pages. Each GitHub account is allowed 1 user site and unlimited project sites. Both kinds will have a limit of 1GB of storage and of 100GB of monthly bandwidth.&#xA;For a repository to be hosted on GitHub Pages it must be public (unless you have GitHub Pro).</description>
    </item>
    <item>
      <title>There Are Three Types of Linking</title>
      <link>https://NicknEma.github.io/posts/there-are-three-types-of-linking/</link>
      <pubDate>Thu, 25 Apr 2024 12:00:00 +0200</pubDate>
      <guid>https://NicknEma.github.io/posts/there-are-three-types-of-linking/</guid>
      <description>I was taught that libraries can be linked one of two ways: statically or dynamically.&#xA;Computer people love these two words and use them every time they can. Static and dynamic typing, static and dynamic scoping rules.&#xA;In the case of linking, the nomenclature describes whether the resulting binary has depencencies that will still be unresolved when it will be loaded into memory for execution.&#xA;For a symbol to be resolved statically, the linker (typically link.</description>
    </item>
    <item>
      <title>The Infinity of Lines and Numbers</title>
      <link>https://NicknEma.github.io/posts/the-infinity-of-lines-and-numbers/</link>
      <pubDate>Sat, 06 Apr 2024 16:43:01 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/the-infinity-of-lines-and-numbers/</guid>
      <description>“Young man, in mathematics you don&amp;rsquo;t understand things. You just get used to them.”&#xA;– John von Neumann&#xA;This is a line:&#xA;I was introduced to this mathematical object when I was in elementary school. The teacher drew one on the blackboard, and then said &amp;ldquo;a line is composed of an infinite number of points. The dashes at the ends indicate that it continues on forever, in both directions&amp;rdquo;. At first, I was surprised by the mention of infinity.</description>
    </item>
    <item>
      <title>Equality and the reunion of broken parts</title>
      <link>https://NicknEma.github.io/posts/equality-and-the-reunion-of-broken-parts/</link>
      <pubDate>Wed, 13 Mar 2024 23:27:18 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/equality-and-the-reunion-of-broken-parts/</guid>
      <description>We are used to think that the word &amp;ldquo;equals&amp;rdquo; means something very specific in mathematics. I can put an operation on the left side of the page, like this:&#xA;\[2 + 2\] And then I can ask you what this is equal to:&#xA;\[2 + 2 =\] That symbol, called the &amp;ldquo;equal sign&amp;rdquo;, is treated like a question mark. What is on its left forms a question, and then you put your answer on the right.</description>
    </item>
    <item>
      <title>Lies, Secrets and Multiplexers</title>
      <link>https://NicknEma.github.io/posts/lies-secrets-and-multiplexers/</link>
      <pubDate>Wed, 04 Oct 2023 12:30:00 +0100</pubDate>
      <guid>https://NicknEma.github.io/posts/lies-secrets-and-multiplexers/</guid>
      <description>You are on a street, one person coming towards you from your right, another from your left. You know that, when they will have reached you, one of them will tell the truth and one will lie. To know which one will do what, you only need the answer to one yes-or-no question; in computer terms, you need 1 bit of information to choose which person to trust. It doesn&amp;rsquo;t matter if you ask &amp;ldquo;should I trust the person coming from the right?</description>
    </item>
  </channel>
</rss>
